/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package cajero;

import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.JOptionPane;

/**
 *
 * @author B938201
 */
public class VentanaCajero extends javax.swing.JFrame {

    /**
     * Creates new form VentanaCajero
     */
    public VentanaCajero() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTextMonto = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Ingrese cantidad a retirar:");

        jButton1.setText("Retirar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextMonto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextMonto.setText("0");
        jTextMonto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextMontoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextMontoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextMontoKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Cajero - Retiro de efectivo");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Bienvenido");

        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(93, 93, 93))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextMonto, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jTextMonto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addGap(4, 4, 4))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        crearRetiro();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextMontoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextMontoKeyTyped
        int tecla = (int) evt.getKeyCode();
        char c = evt.getKeyChar();
        if (((c < '0' || c > '9')) && (c != '\b')) { //valida 0-9, PUNTO Y BACKSPACE
            if (c == '.') {
                String aux = jTextMonto.getText(); //VERFICA QUE NO HAYA MAS DE UN PUNTO
                if (aux.contains(".")) {
                    evt.consume();
                }
            } else {
                evt.consume();
            }
        } else {
            if (jTextMonto.getText().length() == 1 && jTextMonto.getText().equals("0")) {
                evt.consume();
                jTextMonto.setText(String.valueOf(c));
            }
        }

    }//GEN-LAST:event_jTextMontoKeyTyped

    private void jTextMontoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextMontoKeyReleased
    }//GEN-LAST:event_jTextMontoKeyReleased

    public void crearRetiro() {

        String montoTotal = "0";
        ArrayList<Dinero> listaOrignial = new ArrayList<Dinero>();  //ARREGLO PARA COPIA DE DB
        ArrayList<Dinero> listaCajero = new ArrayList<Dinero>();    //ARREGLO PARA ENTREGA DE BILLETES
        Modelo dbSaldo = new Modelo();
        double montoT = dbSaldo.obtenerSaldoDb();        //SALDO TOTAL EN LA DB     
        //listaOrignial = monederoDigital();    //DATOS GENERADOS POR NOSOTROS ;)
        listaOrignial = dbSaldo.monederoDigitalDb();    //LISTA DE BILLETES/MONEDAS DE LA BD 

        //double montoT= 12550.0;
        double montoR;
        if (jTextMonto.getText().equals(""))//VERIFICAMOS QUE EL MONTO A RETIRAR NO SEA 0
        {
            montoR = 0.0;
        } else {
            montoR = Double.parseDouble(jTextMonto.getText());//SI ES DISTINTO DE 0 PARSEAR EL MONTO A RETIRAR A DOUBLE
        }

        if (montoT >= montoR && montoR > 0) {//VERIFICAMOS QUE EL MONTO TOTAL EN LA BD SEA MAYOR AL MONTO A RETIRAR
            Retiro RetiroCajero = new Retiro(listaOrignial, montoR);
            listaCajero = RetiroCajero.getListaDineroDespachar();
            RetiroCajero.retirar();
            String msj = "";
            Iterator it = listaCajero.iterator();
            if (RetiroCajero.isValida()) {
                while (it.hasNext()) {
                    Dinero dimuestra = (Dinero) it.next();
                    msj += dimuestra.getTipo() + "  " + String.valueOf(dimuestra.getDenominacion() + " \t"
                            + String.valueOf(dimuestra.getCantidad()) + "\n");
                }
                //Actualizar Base de Datos
                Modelo db = new Modelo();
                db.actualizarDb(RetiroCajero.getListaDineroDb());
                JOptionPane.showMessageDialog(null, msj + "Total: " + montoR, "Operación exitosa", JOptionPane.INFORMATION_MESSAGE);
                limpiarControles();
            } else {
                String msjerror = "Lo Sentimos, existe saldo sin embargo, no hay cambio";
                JOptionPane.showMessageDialog(null, msjerror, "Operacion Fallida", JOptionPane.ERROR_MESSAGE);
                limpiarControles();
            }
        } else {
            String msjerror;
            if (montoR > 0) {
                msjerror = "Lo Sentimos No Existe Saldo Suficiente Para Completar su Solicitud";
            } else {
                msjerror = "La cantidad a retirar debe ser mayor que $0";
            }
            JOptionPane.showMessageDialog(null, msjerror, "Operación Fallida", JOptionPane.ERROR_MESSAGE);
            limpiarControles();
        }
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
//        String a = JOptionPane.showInputDialog(null, "Password");
//
//        if (a != null && a.equals("123")) {
            Detalles det = new Detalles();
            det.show();
//        } else {
//            JOptionPane.showMessageDialog(null, "Error, usuario no válido");
//        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextMontoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextMontoKeyPressed
        int key = evt.getKeyCode();

        if (key == KeyEvent.VK_ENTER) {
            crearRetiro();
        }
        
    }//GEN-LAST:event_jTextMontoKeyPressed

    public void limpiarControles(){
    jTextMonto.setText("0");
    jTextMonto.requestFocus();
}

    public ArrayList<Dinero> monederoDigital(){
        
        ArrayList<Dinero> listaOrignial = new ArrayList<Dinero>();
        for (int i = 0; i <= 10; i++) {
            Dinero dinx = new Dinero();
            dinx.setId(i+1);

            if (i == 0) {
                dinx.setTipo("Billete");
                dinx.setDenominacion(1000);
                dinx.setCantidad(2);
            }
            if (i == 1) {
                dinx.setTipo("Billete");
                dinx.setDenominacion(500);
                dinx.setCantidad(5);
            }
            if (i == 2) {
                dinx.setTipo("Billete");
                dinx.setDenominacion(200);
                dinx.setCantidad(10);
            }
            if (i == 3) {
                dinx.setTipo("Billete");
                dinx.setDenominacion(100);
                dinx.setCantidad(20);
            }
            if (i == 4) {
                dinx.setTipo("Billete");
                dinx.setDenominacion(50);
                dinx.setCantidad(30);
            }
            if (i == 5) {
                dinx.setTipo("Billete");
                dinx.setDenominacion(20);
                dinx.setCantidad(40);
            }
            if (i == 6) {
                dinx.setTipo("Moneda");
                dinx.setDenominacion(10);
                dinx.setCantidad(50);
            }
            if (i == 7) {
                dinx.setTipo("Moneda");
                dinx.setDenominacion(5);
                dinx.setCantidad(100);
            }
            if (i == 8) {
                dinx.setTipo("Moneda");
                dinx.setDenominacion(2);
                dinx.setCantidad(200);
            }
            if (i == 9) {
                dinx.setTipo("Moneda");
                dinx.setDenominacion(1);
                dinx.setCantidad(300);
            }
            if (i == 10) {
                dinx.setTipo("Moneda");
                dinx.setDenominacion((float) 0.50);
                dinx.setCantidad(100);
            }
            listaOrignial.add(dinx);
        }
        return listaOrignial;
    }

    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaCajero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaCajero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaCajero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaCajero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

   
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaCajero().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextMonto;
    // End of variables declaration//GEN-END:variables
}
